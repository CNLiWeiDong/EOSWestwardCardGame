#ifndef TEMPLET_DB_Equip1_H
#define TEMPLET_DB_Equip1_H
#include <map>
#include <tuple>
#include <string>
#include <vector>
#include <eosiolib/eosio.hpp>
using namespace std;
using namespace eosio;
struct DB_Equip1_Data
{
int id;
int Class;
int daoju_id;
int nameber;
int Gold;
};
class DB_Equip1;
static DB_Equip1* DB_Equip1_instanse = nullptr;
class DB_Equip1
{
public:
static DB_Equip1* getInstanse()
{
    if(DB_Equip1_instanse)
        return  DB_Equip1_instanse;
        DB_Equip1_instanse = new DB_Equip1();
    return  DB_Equip1_instanse;
}
int getCount()
{
    return db_data.size();
}
vector<int> getAllIds()
{
    vector<int> ids;
    for(auto &it : db_data)
    {
        ids.push_back(it.first);
    }
    return ids;
}
const DB_Equip1_Data& getDataById(int id)
{
    auto iter = db_data.find(id);
    eosio_assert(iter==db_data.end(),"id is not exist");
    return iter->second;
};
private:
    map<int,DB_Equip1_Data> db_data;
public:
DB_Equip1()
{
    db_data[0] = {0,0,11000,1,5000};
    db_data[1] = {1,1,11000,1,5000};
    db_data[2] = {2,2,11000,1,5000};
    db_data[3] = {3,3,11000,1,5000};
    db_data[4] = {4,4,11000,2,10000};
    db_data[5] = {5,5,11000,3,15000};
    db_data[6] = {6,6,11000,4,20000};
    db_data[7] = {7,7,11000,5,25000};
    db_data[8] = {8,8,11000,6,30000};
    db_data[9] = {9,9,11000,7,35000};
    db_data[10] = {10,10,11000,8,40000};
    db_data[11] = {11,11,11000,9,45000};
    db_data[12] = {12,12,11000,10,50000};
    db_data[13] = {13,13,11000,11,55000};
    db_data[14] = {14,14,11000,24,120000};
    db_data[15] = {15,15,11000,26,130000};
    db_data[16] = {16,16,11000,28,140000};
    db_data[17] = {17,17,11000,30,150000};
    db_data[18] = {18,18,11000,32,160000};
    db_data[19] = {19,19,11000,34,170000};
    db_data[20] = {20,20,11000,36,180000};
    db_data[21] = {21,21,11000,38,190000};
    db_data[22] = {22,22,11000,40,200000};
    db_data[23] = {23,23,11000,42,210000};
    db_data[24] = {24,24,11000,44,220000};
    db_data[25] = {25,25,11000,46,230000};
    db_data[26] = {26,26,11000,48,240000};
    db_data[27] = {27,27,11000,50,250000};
    db_data[28] = {28,28,11000,52,260000};
    db_data[29] = {29,29,11000,54,270000};
    db_data[30] = {30,30,11000,56,280000};
    db_data[31] = {31,31,11000,58,290000};
    db_data[32] = {32,32,11000,60,300000};
    db_data[33] = {33,33,11000,62,310000};
    db_data[34] = {34,34,11000,64,320000};
    db_data[35] = {35,35,11000,66,330000};
    db_data[36] = {36,36,11000,68,340000};
    db_data[37] = {37,37,11000,70,350000};
    db_data[38] = {38,38,11000,72,360000};
    db_data[39] = {39,39,11000,74,370000};
    db_data[40] = {40,40,11000,76,380000};
    db_data[41] = {41,41,11000,78,390000};
    db_data[42] = {42,42,11000,80,400000};
    db_data[43] = {43,43,11000,82,410000};
    db_data[44] = {44,44,11000,84,420000};
    db_data[45] = {45,45,11000,86,430000};
    db_data[46] = {46,46,11000,88,440000};
    db_data[47] = {47,47,11000,90,450000};
    db_data[48] = {48,48,11000,92,460000};
    db_data[49] = {49,49,11000,94,470000};
    db_data[50] = {50,50,11000,96,480000};
    db_data[51] = {51,51,11000,98,490000};
    db_data[52] = {52,52,11000,100,500000};
    db_data[53] = {53,53,11000,102,510000};
    db_data[54] = {54,54,11000,104,520000};
    db_data[55] = {55,55,11000,106,530000};
    db_data[56] = {56,56,11000,108,540000};
    db_data[57] = {57,57,11000,110,550000};
    db_data[58] = {58,58,11000,112,560000};
    db_data[59] = {59,59,11000,114,570000};
    db_data[60] = {60,60,11000,116,580000};
    db_data[61] = {61,61,11000,118,590000};
    db_data[62] = {62,62,11000,120,600000};
    db_data[63] = {63,63,11000,122,610000};
    db_data[64] = {64,64,11000,124,620000};
    db_data[65] = {65,65,11000,126,630000};
    db_data[66] = {66,66,11000,128,640000};
    db_data[67] = {67,67,11000,130,650000};
    db_data[68] = {68,68,11000,132,660000};
    db_data[69] = {69,69,11000,134,670000};
    db_data[70] = {70,70,11000,136,680000};
    db_data[71] = {71,71,11000,138,690000};
    db_data[72] = {72,72,11000,140,700000};
    db_data[73] = {73,73,11000,142,710000};
    db_data[74] = {74,74,11000,144,720000};
    db_data[75] = {75,75,11000,146,730000};
    db_data[76] = {76,76,11000,148,740000};
    db_data[77] = {77,77,11000,150,750000};
    db_data[78] = {78,78,11000,152,760000};
    db_data[79] = {79,79,11000,154,770000};
    db_data[80] = {80,80,11000,156,780000};
    db_data[81] = {81,81,11000,158,790000};
    db_data[82] = {82,82,11000,160,800000};
    db_data[83] = {83,83,11000,162,810000};
    db_data[84] = {84,84,11000,164,820000};
    db_data[85] = {85,85,11000,166,830000};
    db_data[86] = {86,86,11000,168,840000};
    db_data[87] = {87,87,11000,170,850000};
    db_data[88] = {88,88,11000,172,860000};
    db_data[89] = {89,89,11000,174,870000};
    db_data[90] = {90,90,11000,176,880000};
    db_data[91] = {91,91,11000,178,890000};
    db_data[92] = {92,92,11000,180,900000};
    db_data[93] = {93,93,11000,182,910000};
    db_data[94] = {94,94,11000,184,920000};
    db_data[95] = {95,95,11000,186,930000};
    db_data[96] = {96,96,11000,188,940000};
    db_data[97] = {97,97,11000,190,950000};
    db_data[98] = {98,98,11000,192,960000};
    db_data[99] = {99,99,11000,194,970000};
    db_data[100] = {100,100,11000,196,980000};
    db_data[101] = {101,101,11000,232,990000};
    db_data[102] = {102,102,11000,236,1000000};
    db_data[103] = {103,103,11000,240,1010000};
    db_data[104] = {104,104,11000,244,1020000};
    db_data[105] = {105,105,11000,248,1030000};
    db_data[106] = {106,106,11000,252,1040000};
    db_data[107] = {107,107,11000,256,1050000};
    db_data[108] = {108,108,11000,260,1060000};
    db_data[109] = {109,109,11000,264,1070000};
    db_data[110] = {110,110,11000,268,1080000};
    db_data[111] = {111,111,11000,272,1090000};
    db_data[112] = {112,112,11000,276,1100000};
    db_data[113] = {113,113,11000,280,1110000};
    db_data[114] = {114,114,11000,284,1120000};
    db_data[115] = {115,115,11000,0,0};
}
};
#endif //TEMPLET_DB_BATTLEAI_H
